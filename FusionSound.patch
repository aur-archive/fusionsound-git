From a1ef9036d453b3c9d9aee80086ef0c9f32e7ba34 Mon Sep 17 00:00:00 2001
From: kennytm <kennytm@gmail.com>
Date: Thu, 8 Dec 2011 02:46:55 +0800
Subject: [PATCH] Patches for compilation on Debian sid.

---
 .../ifusionsoundmusicprovider_ffmpeg.c             |   23 ++++++++++---------
 src/core/core_sound.c                              |    4 +-
 2 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/interfaces/IFusionSoundMusicProvider/ifusionsoundmusicprovider_ffmpeg.c b/interfaces/IFusionSoundMusicProvider/ifusionsoundmusicprovider_ffmpeg.c
index 6ec5317..40d4266 100644
--- a/interfaces/IFusionSoundMusicProvider/ifusionsoundmusicprovider_ffmpeg.c
+++ b/interfaces/IFusionSoundMusicProvider/ifusionsoundmusicprovider_ffmpeg.c
@@ -41,6 +41,7 @@
 
 #include <misc/sound_util.h>
 
+#define FF_API_OLD_METADATA2 0
 #include <libavcodec/avcodec.h>
 #include <libavformat/avformat.h>
 
@@ -64,7 +65,7 @@ typedef struct {
 
      DirectStream                 *stream;
 
-     ByteIOContext                 pb;
+     AVIOContext                   pb;
      AVFormatContext              *ctx;
      AVStream                     *st;
      void                         *iobuf;
@@ -481,12 +482,12 @@ IFusionSoundMusicProvider_FFmpeg_GetTrackDescription( IFusionSoundMusicProvider
      if (!desc)
           return DR_INVARG;
 
-     direct_snputs( desc->artist, data->ctx->author, FS_TRACK_DESC_ARTIST_LENGTH );
-     direct_snputs( desc->title, data->ctx->title, FS_TRACK_DESC_TITLE_LENGTH );
-     direct_snputs( desc->album, data->ctx->album, FS_TRACK_DESC_ALBUM_LENGTH );
-     direct_snputs( desc->genre, data->ctx->genre, FS_TRACK_DESC_GENRE_LENGTH );
+//   direct_snputs( desc->artist, data->ctx->author, FS_TRACK_DESC_ARTIST_LENGTH );
+//   direct_snputs( desc->title, data->ctx->title, FS_TRACK_DESC_TITLE_LENGTH );
+//   direct_snputs( desc->album, data->ctx->album, FS_TRACK_DESC_ALBUM_LENGTH );
+//   direct_snputs( desc->genre, data->ctx->genre, FS_TRACK_DESC_GENRE_LENGTH );
      direct_snputs( desc->encoding, data->codec->codec->name, FS_TRACK_DESC_ENCODING_LENGTH );
-     desc->year = data->ctx->year;
+//   desc->year = data->ctx->year;
      desc->bitrate = data->codec->bit_rate;
      desc->replaygain = desc->replaygain_album = 0;
      
@@ -595,8 +596,8 @@ FFmpegStreamThread( DirectThread *thread, void *ctx )
           }
           
           len = AVCODEC_MAX_AUDIO_FRAME_SIZE;
-          decoded = avcodec_decode_audio2( data->codec, 
-                                          (s16*)data->buf, &len, pkt_data, pkt_size );
+          decoded = avcodec_decode_audio3( data->codec, 
+                                          (s16*)data->buf, &len, &pkt );
           if (decoded < 0) {
                av_free_packet( &pkt );
                pkt_size = 0;
@@ -800,8 +801,8 @@ FFmpegBufferThread( DirectThread *thread, void *ctx )
           }
           
           len = AVCODEC_MAX_AUDIO_FRAME_SIZE;
-          decoded = avcodec_decode_audio2( data->codec,
-                                          (s16*)data->buf, &len, pkt_data, pkt_size );
+          decoded = avcodec_decode_audio3( data->codec,
+                                          (s16*)data->buf, &len, &pkt );
           if (decoded < 0) {
                av_free_packet( &pkt );
                pkt_size = 0;
@@ -1208,7 +1209,7 @@ Construct( IFusionSoundMusicProvider *thiz,
      }
      
      for (i = 0; i < data->ctx->nb_streams; i++) {
-          if (data->ctx->streams[i]->codec->codec_type == CODEC_TYPE_AUDIO) {
+          if (data->ctx->streams[i]->codec->codec_type == AVMEDIA_TYPE_AUDIO) {
                if (!data->st || data->st->codec->bit_rate < data->ctx->streams[i]->codec->bit_rate)
                     data->st = data->ctx->streams[i];
           }
diff --git a/src/core/core_sound.c b/src/core/core_sound.c
index 4cf6dd9..2ce08a1 100644
--- a/src/core/core_sound.c
+++ b/src/core/core_sound.c
@@ -314,7 +314,7 @@ fs_core_create_buffer( CoreSound *core )
      D_ASSERT( core->shared->buffer_pool != NULL );
 
      /* Create a new object in the buffer pool. */
-     return (CoreSoundBuffer*) fusion_object_create( core->shared->buffer_pool, core->world );
+     return (CoreSoundBuffer*) fusion_object_create( core->shared->buffer_pool, core->world, core->fusion_id );
 }
 
 CorePlayback *
@@ -325,7 +325,7 @@ fs_core_create_playback( CoreSound *core )
      D_ASSERT( core->shared->playback_pool != NULL );
 
      /* Create a new object in the playback pool. */
-     return (CorePlayback*) fusion_object_create( core->shared->playback_pool, core->world );
+     return (CorePlayback*) fusion_object_create( core->shared->playback_pool, core->world, core->fusion_id );
 }
 
 DirectResult
-- 
1.7.7.3

